<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>A Pelican Blog</title><link href="/" rel="alternate"></link><link href="/feeds/geekery.atom.xml" rel="self"></link><id>/</id><updated>2015-03-21T10:40:00+00:00</updated><entry><title>Oh Swype, Where Have You Been All My Life?</title><link href="/oh-swype-where-have-you-been-all-my-life.html" rel="alternate"></link><updated>2015-03-21T10:40:00+00:00</updated><author><name>feoh</name></author><id>tag:,2015-03-21:oh-swype-where-have-you-been-all-my-life.html</id><summary type="html">&lt;p&gt;For years my Android using friends have been revving about
&lt;a href="http://www.swype.com"&gt;Swype&lt;/a&gt;.&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;When tablets and smartphones first appeared on the scene, many of us
were so awash in the glow of our shiny new toys that we overlooked a
glaring weak point - text input.&lt;/p&gt;
&lt;p&gt;In a stunning display of uncreative design, the keyboards for these
devices were simply 'virtualized' versions of their mechanical
counterparts.&lt;/p&gt;
&lt;p&gt;The result seems like a regular keyboard, but bereft of the comparative
elegance and efficiency of touch typing we are left in an incredibly
unsatisfying state of perpetual hunt and peck. To add insult to injury,
this ethereal target we're eternally stabbing at changes underneath us
to suit the whim of the author of whichever app we're using.&lt;/p&gt;
&lt;p&gt;With Swype, one simply glides one's finger from letter to letter
spelling our words. Swype handles tedious details like putting spaces
between words or after periods.&lt;/p&gt;
&lt;p&gt;I could keep babbling, but suffice it to say it has been a life changer
for me. Paired with &lt;a href="http://blogsyapp.com" title="Blogsy"&gt;Blogsy&lt;/a&gt;, my iPad
blogging ttyl of choice, you may be hearing from me more often!&lt;/p&gt;
&lt;div id="blogsy_footer"
style="text-align: right; font-size: small; clear: both;"&gt;

[![Posted with
Blogsy](http://blogsyapp.com/images/blogsy_footer_icon.png)Posted with
Blogsy](http://blogsyapp.com)

&lt;/div&gt;</summary><category term="blogging"></category><category term="input"></category><category term="ios"></category><category term="IPad"></category><category term="mobile"></category><category term="Swype"></category><category term="text"></category></entry><entry><title>The Chrome Conundrum</title><link href="/the-chrome-conundrum.html" rel="alternate"></link><updated>2013-10-21T13:16:00+00:00</updated><author><name>feoh</name></author><id>tag:,2013-10-21:the-chrome-conundrum.html</id><summary type="html">&lt;h2&gt;I Love/Hate Chrome!&lt;/h2&gt;
&lt;p&gt;Having used the Chrome browser regularly for a couple of years now, I
really love quite a number of things about it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It's &lt;strong&gt;fast&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;The developer tools are superb&lt;/li&gt;
&lt;li&gt;It has a vibrant user community, including a number of very smart
    people whose opinions I respect who are also huge fans&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;However, its implementation under Mac OS X, my operating system of
choice, is rather flawed in a number of respects that drive me crazy:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Its external monitor support is awful.  If I have Chrome open on my
    Macbook Pro, then disconnect my external monitor and go to a
    meeting, all my windows have vanished into la-la land, and no amount
    of killing and restarting Chrome will bring them back.  Also,
    creating new windows fails silently as well, I presume Chrome thinks
    the windows are going to the external monitor which is no longer
    connected.&lt;/li&gt;
&lt;li&gt;No easy, native Java support! I know, I know, I can just about hear
    the hipster geeks rolling their eyes at this, but face it kiddos,
    Java was running mission critical systems while you were in diapers.
     It's not dead, it's not going away, and it's an incredibly useful
    tool - for Chrome on OS X to not natively support Java in the
    browser is unforgivable.&lt;/li&gt;
&lt;li&gt;Unresponsive developers - Check out the Chromium bug list and you'll
    see droves of OS X users screaming for Java support - and dead
    silence from the developers.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I haven't yet made the decision to switch back to Firefox full-time, but
they're certainly driving me in that direction.  I loved Firefox for
years until I fell in love with Chrome's speed, sleek design and awesome
devtools.&lt;/p&gt;</summary><category term="browsers"></category><category term="bugs"></category><category term="design"></category><category term="osx"></category></entry><entry><title>The walled garden is the future of computing.</title><link href="/the-walled-garden-is-the-future-of-computing.html" rel="alternate"></link><updated>2012-08-15T21:32:00+00:00</updated><author><name>feoh</name></author><id>tag:,2012-08-15:the-walled-garden-is-the-future-of-computing.html</id><summary type="html">&lt;p&gt;These days it seems like almost everybody (at least almost everybody in
the technology world) has made bashing Apple their new favorite past
time.&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;One of the complaints I hear again and again is that Apple's
mobile operating system that runs every iPhone, iPad, and iPod Touch are
designed based on the "walled garden" philosophy - meaning that you can
only install approved apps on the device from Apple's App Store unless
you throw all caution (and your warranty :)) and jailbreak your device.&lt;/p&gt;
&lt;p&gt;Compare this to Google's Android OS where the user can install anything
they want, from wherever they want from wherever they want, including
some fairly insidious malware. I know I've been spammed two or three
times by friends who had their Android phone's address book compromised.
However even Google is making moves in more restrictive directions of
late, but only in their app store, which you can ignore completely if
you prefer.&lt;/p&gt;
&lt;p&gt;What these geeks are missing is that for 99% of the population, the jail
is &lt;strong&gt;&lt;em&gt;a good thing!&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;People want their devices to be appliances&lt;/em&gt;.
They want to browse the web without fear, write their documents and
spreadsheets unfettered by things like virus checking, file systems and
storage devices, and play their games secure in the knowledge that
they're not pulling in a Trojan that will send Nazi supremacist hate
mail to their grandma and their boss.&lt;/p&gt;
&lt;p&gt;The hard truth for many geeks to accept is that for end users, this
represents pretty much the ideal computing experience. This goes way
beyond Apple and iDevices and into the realm of general purpose
computers like laptops mad desktops.&lt;/p&gt;
&lt;p&gt;All one need do is examine the marketing blurbs for the latest OS
versions from Apple and Microsoft to validate my claim. Windows 8
features required code signing for installed apps, effectively the
beginnings of a walled garden of their own.&lt;/p&gt;
&lt;p&gt;As I mentioned previously, Apple lead the charge into the walled garden
future I'm predicting with IOS, but with tithe release of MacOS X
Mountain Lion, they're filing the rough edges from the computing
experience for desktop and laptop users as well.&lt;/p&gt;
&lt;p&gt;Honestly it's been rather amusing to,watch the geek-o-sphere practically
tremble with rage over this issue, ranting and roaring on about Apple's
new found tyranny.&lt;/p&gt;
&lt;p&gt;In truth I just don't get it. Gatekeeper can be bypassed with a single
key press. What's the big deal? I predict that there will always
continue to be trap doors and escape hatches for those who know enough
to seek them out.&lt;/p&gt;
&lt;p&gt;Apple is in fact not trying to impose some kind of Orwellian new world
order and declaring a Jihad on geeks, they're just doing what they've
always done, innovating the tech in ways that will improve the quality
of life for the majority of users.&lt;/p&gt;
&lt;p&gt;Simply put, geeks need to get over themselves. Computing has become such
a part of the mainstream of every day life that people don't &lt;strong&gt;want or
need&lt;/strong&gt; to be beholden to the techno-priesthood any longer. To my mind,
this is nothing but win. Over the long haul, it means we can get out of
the business of being family tech support, and get back to playing with
technology and having fun pushing the envelope!&lt;/p&gt;
&lt;div id="blogsy_footer"
style="text-align: right; font-size: small; clear: both;"&gt;

[![Posted with
Blogsy](http://blogsyapp.com/images/blogsy_footer_icon.png)Posted with
Blogsy](http://blogsyapp.com)

&lt;/div&gt;</summary><category term="apple"></category><category term="code"></category><category term="computers"></category><category term="cryptography"></category><category term="future"></category><category term="signing"></category></entry><entry><title>Trying out VimRepress</title><link href="/trying-out-vimrepress.html" rel="alternate"></link><updated>2012-02-09T16:48:00+00:00</updated><author><name>feoh</name></author><id>tag:,2012-02-09:trying-out-vimrepress.html</id><summary type="html">&lt;h2&gt;VimRePress&lt;/h2&gt;
&lt;p&gt;In an ongoing effort to immerse myself in Vim as much as possible, I'm
trying out a plugin called
&lt;a href="https://github.com/vim-scripts/VimRepress"&gt;VimRepress&lt;/a&gt; - a fork of the
popular Vimpress plugin.&lt;br /&gt;
&lt;!--more--&gt;&lt;/p&gt;
&lt;h3&gt;Installing&lt;/h3&gt;
&lt;p&gt;Unfortunately, getting it running with MacVim on MacOS X Lion is a bit
of a bear, but thankfully Paulo Poiati wrote an excellent
&lt;a href="http://blog.paulopoiati.com/2012/02/07/installing-vimrepress-in-macvim-osx-lion/"&gt;article&lt;/a&gt;
on getting the job done.&lt;/p&gt;
&lt;p&gt;Basically, if you're using Homebrew, you have to rebuild your MacVim to
use the i386 architecture, otherwise you wind up with a Python
interpreter that doesn't match the bitness of your editor, and when
MacVim goes to invoke Python to run the blogging bits in the plugin,
MacVim explodes.&lt;/p&gt;
&lt;p&gt;Also unfortunately, you can't use the Homebrew built Python or Ruby
interpreters when building MacVim either, and have to instead use the
bundled ones from MacOS (both sorely out of date. Who uses Ruby 1.8
anymore? :).&lt;/p&gt;
&lt;p&gt;So I had to uninstall my Homebrew based Python and Ruby, install
python-markdown2 into the OSX default Python instance, and now
everything seems to be working just fine.&lt;/p&gt;
&lt;h2&gt;Living the Vim Life&lt;/h2&gt;
&lt;h3&gt;VimRepress and Blogging&lt;/h3&gt;
&lt;p&gt;That said, there are still some creature comforts that I miss from the
awesome Blogging bundle in TextMate - silly things like giving me a drop
down list with the possible Categories for my post and the like.
Hopefully over time we can get those implemented in Vim land :)&lt;/p&gt;
&lt;p&gt;On the upside, and this counts for a lot, is that I can now write in
&lt;a href="http://daringfireball.net/projects/markdown/"&gt;Markdown&lt;/a&gt; again
\&amp;lt;&lt;em&gt;contented sigh&lt;/em&gt;&gt; I've missed Markdown terribly ever since I
transitioned the blog from Typo to Wordpress many moons ago. It's a joy
to write in, and really lets me think about the writing, not about a
properly formed HTML element, which is priceless.&lt;/p&gt;
&lt;h3&gt;Vim and Me In the Large&lt;/h3&gt;
&lt;p&gt;For what it's worth, thus far the minor pain of transitioning to Vim has
been entirely worth it, I've definitely seen a noticeable productivity
boost, and for work-a-day code and configuration editing, I'm actually
finding Vim to be vastly more powerful than TextMate simply because my
environment is everywhere I want to be rather than being chained to
using my Mac desktop for editing and resorting to chicanery like remote
mounted filesystems via sshfs.&lt;/p&gt;
&lt;p&gt;For years I'd read &lt;a href="http://pragprog.com/the-pragmatic-programmer"&gt;The Pragmatic
Programmer&lt;/a&gt; with its
mantra of "Learn &lt;strong&gt;one&lt;/strong&gt; editor, and learn it *&lt;em&gt;well&lt;/em&gt;" (paraphrase).&lt;/p&gt;
&lt;p&gt;I always had mixed feelings about that. I'd taken pride through most of
my career in being able to learn a multitude of different tools and
adapt to whatever worked best in the local environment. That is in fact
a really great skill to have, but there is definitely wisdom where
editors are concerned to pick one and &lt;em&gt;live&lt;/em&gt; in it 24/7.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://code.google.com/p/macvim/"&gt;MacVim&lt;/a&gt; has helped tremendously with
that. With it you can have your cake and eat it to. You can use the very
same config files and plugins you use on your UNIX servers on your
desktop, only wrapped in a superbly crafted Aqua GUI.&lt;/p&gt;
&lt;p&gt;It's a continuing process, but thus far the work I've put in has been
totally worth it. I would encourage anyone who's on the fence to give it
a try and be strict with yourself about it. Pick a time when you can
afford to take the hit and spend the time to get facile enough that you
won't miss your old environment. You won't regret it.&lt;/p&gt;
&lt;!-- #VIMPRESS_TAG# http://www.feoh.org/wp-content/uploads/2012/02/wpid156-vimpress_4f3443fb_mkd.txt wpid156-vimpress_4f3443fb_mkd.txt --&gt;</summary><category term="blog"></category><category term="blogging"></category><category term="editors"></category><category term="vim"></category></entry><entry><title>Move over TextMate. MacVim is the new kid in town!</title><link href="/move-over-textmate-macvim-is-the-new-kid-in-town.html" rel="alternate"></link><updated>2011-09-09T17:41:00+00:00</updated><author><name>feoh</name></author><id>tag:,2011-09-09:move-over-textmate-macvim-is-the-new-kid-in-town.html</id><summary type="html">&lt;p&gt;For years I've been rather proud of the fact that I'm a total polyglot
when it&lt;br /&gt;
comes to editors. I'm comfortable on both sides of the fence, using
Emacs, Vi,&lt;br /&gt;
TextMate, EditPlus, or even the venerable /bin/ed whenever that makes
sense.&lt;br /&gt;
&lt;!--more--&gt;&lt;br /&gt;
But for the first time in a long time, my current (awesome! :)) job at
&lt;a href="http://www.bluestatedigital.com"&gt;Blue&lt;br /&gt;
State Digital&lt;/a&gt; has given me the
opportunity to&lt;br /&gt;
branch out and do quite a bit of real software development.&lt;/p&gt;
&lt;p&gt;I first encountered TextMate shortly after I came to OSX. It's a great
editor,&lt;br /&gt;
and I have a tremendous amount of respect for Alan Odegard of
&lt;a href="http://www.macromates.com"&gt;Macromates&lt;/a&gt;&lt;br /&gt;
software. He has just about single handedly created not only an
amazing&lt;br /&gt;
editor, but a vibrant and loyal community around his program, and he's
to be&lt;br /&gt;
commended for that.&lt;/p&gt;
&lt;p&gt;I would have remained happy in TextMate land, but for the fact that my
most&lt;br /&gt;
recent job has me going back to where it all started for me - server
side UNIX,&lt;br /&gt;
Linux to be exact.&lt;/p&gt;
&lt;p&gt;So, I editing files on my Mac using Expandrive to remotely mount them,
but&lt;br /&gt;
quite frankly that's a pain in the neck I just don't need to deal with.&lt;/p&gt;
&lt;p&gt;With Vim, I can memorize one set of keystrokes for everywhere I might
need to&lt;br /&gt;
be.&lt;/p&gt;
&lt;p&gt;And with MacVim, I get a nicely streamlined, beautifully Aqua-fied
interface,&lt;br /&gt;
with all the creature comforts TextMate provides and more.&lt;/p&gt;
&lt;p&gt;What's more, there are a number of folks making the same transition, so
there&lt;br /&gt;
are some excellent articles and websites out there to ease the
transition like&lt;br /&gt;
[this guide on making the  &lt;/p&gt;
&lt;p&gt;switch](http://www.jackkinsella.ie/2011/09/05/textmate-to-vim.html#masthead)
or&lt;br /&gt;
the excellent &lt;a href="http://vimcasts.org"&gt;VimCasts&lt;/a&gt; series of Vim tutorial
screen&lt;br /&gt;
casts. They cover everything from the basics to some fairly advanced
tips and&lt;br /&gt;
tricks on more complex Vim modes and integrations, and is written by a
TextMate&lt;br /&gt;
to Vim switcher.&lt;/p&gt;
&lt;p&gt;Right now I'm writing this post on the excellent&lt;br /&gt;
&lt;a href="http://www.vim.org/scripts/script.php?script_id=3510"&gt;VimRePress&lt;/a&gt;
plugin for&lt;br /&gt;
Vim that allows you to author and manage your Wordpress blog right from
within&lt;br /&gt;
the editor! Very sweet :)&lt;/p&gt;
&lt;p&gt;So, it's a brave new world, and I'm excited by the opportunity to get&lt;br /&gt;
&lt;strong&gt;really&lt;/strong&gt; good at Vim so I can push my editing productivity through
the roof&lt;br /&gt;
:)&lt;/p&gt;</summary><category term="editors"></category><category term="Mac"></category><category term="platforms"></category><category term="textmate"></category><category term="UNIX"></category><category term="vim"></category></entry><entry><title>Why Apple's Mac App Store will be good for the Mac</title><link href="/why-apples-mac-app-store-will-be-good-for-the-mac.html" rel="alternate"></link><updated>2011-06-21T14:19:00+00:00</updated><author><name>feoh</name></author><id>tag:,2011-06-21:why-apples-mac-app-store-will-be-good-for-the-mac.html</id><summary type="html">&lt;p&gt;When Apple said they were introducing an "App Store" to OSX a-la the
iPhone, iPad, etc. there was much ranting and foaming at the
mouth...&lt;!--more--&gt;Many geeks proclaimed the death of Mac OS X as we
know it. "Apple is iPhone-izing the Mac!" they cried.&lt;/p&gt;
&lt;p&gt;They're largely wrong, at least in all the important ways.&lt;/p&gt;
&lt;p&gt;Here are the salient points:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Discovery - people are *far* more likely to purchase things that
    are available from a single, readily accessible source. Having a
    veritable floatilla of awesome software that's discoverable right
    from the Apple menu of every Mac means that if you're a publisher,
    people are FAR more likely to try your software. I myself found a
    free copy of Autodesk Sketchpad in the app store that I am very much
    enjoying. I might end up buying the commercial product as a result -
    possibly through the app store! (See caveats below for why I might
    choose the shrink wrapped version.)&lt;/li&gt;
&lt;li&gt;Ease of installation - just like on the iPhone and iPad, you click
    "Buy" or "Install" and *BOOM* it's on your machine, happily
    bouncing in your dock. For non technical people, this is a godsend.
    They do not want to know about .dmg files, dragging apps to the
    Applications folder, or the like. Yes, I know, this is VASTLY easier
    than the folks in the Windows world have it with their highly
    complex installers, but even still.&lt;/li&gt;
&lt;li&gt;One Stop Shopping for updates - Sure, lots of devs these days are
    bundling some kind of update mechanism into their apps, but this is
    once again - seamless and easy to use for non technical people.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Of course, every silver lining has a cloud attached, so there are a few
down sides:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Inflexible upgrade path - Apple has imposed rules around publishers
    app store offerings, I don't know all the details, but I do know
    that publishers are not happy. They want total control of how they
    monetize the sale of upgrades for their customers, and to a certain
    extent I can't blame them. Over all I think the net winner here is
    the consumer, so we'll see how many publishers sign up and
    grudgingly cope with the new rules.&lt;/li&gt;
&lt;li&gt;Restrictive rules about permitted content - Nothing sexy, nothing
    violent, no Java or Rosetta, just like the IOS app store.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;From my perspective, people who object to the app store on OSX are on
shaky ground, because unlike the IOS world where the app store is the
ONLY way to get apps, the app store on OSX isn't. You can still install
apps the old fashioned way, and Apple has given &lt;em&gt;no&lt;/em&gt; indocation that
they intend to do this now or at any time in the future. I don't think
it's in their best interest to do this, and I think people who are
predicting imminent doom really need to get their collective head
checked.&lt;/p&gt;
&lt;p&gt;Then again, geeks do have a propensity for hysterics.&lt;/p&gt;
&lt;p&gt;To sum up, I think everyone (publishers, consumers, and the wider Mac
community) has everything to gain and nothing to lose from the app
store, and I for one welcome the addition.&lt;/p&gt;</summary><category term="app"></category><category term="apple"></category><category term="geeks"></category><category term="ios"></category><category term="Macintosh"></category><category term="macos"></category><category term="osx"></category><category term="rants"></category><category term="store"></category></entry><entry><title>Don't buy early access (MEAP) books from Manning Press.</title><link href="/dont-buy-early-access-meap-books-from-manning-press.html" rel="alternate"></link><updated>2011-02-27T09:11:00+00:00</updated><author><name>feoh</name></author><id>tag:,2011-02-27:dont-buy-early-access-meap-books-from-manning-press.html</id><summary type="html">&lt;p&gt;I hate to write a negative blog post about a tech publisher's ebooks
program, but I'm afraid they've driven me to it...&lt;/p&gt;
&lt;p&gt;[May 2011 Update: Manning has changed things and you can now download
any books you've ever bought from them anytime. Yay! My other criticisms
still stand, but this is an improvement!]&lt;br /&gt;
&lt;!--more--&gt;&lt;br /&gt;
Firstly, easily half of the MEAP titles I've purchased never make it to
publication, after languishing for months and months while I get E-mails
about the authors being hard at work on the book.&lt;/p&gt;
&lt;p&gt;Not that I don't sympathize, writing a book is from what I understand
Really Hard, but as a consumer if I've signed up to buy something, I
expect a completed product to come out the other end. To be fair,
Manning does offer either a refund or an exchange plus a bonus free
e-book, but most of the truly hot topics that I found interesting were
MEAP books again, so the cycle repeats.&lt;/p&gt;
&lt;p&gt;Secondly, Manning uses the Yahoo Store for their ebook delivery. Wow,
what a nightmare. You get n days to download your book once they send
you the email, and then POOOF your purchase goes off into the ether.
Compare and contrast with &lt;a href="http://oreilly.com/" title="O'Reilly Media - Technology Books, Tech Conferences, IT Courses, News"&gt;O'Reilly and
Associates&lt;/a&gt;
and the &lt;a href="http://www.pragprog.com/" title="The Pragmatic Bookshelf"&gt;Pragmatic
Programmers&lt;/a&gt; (two
publishing houses I can't recommend enthusiastically enough.) where you
can re-download your purchases anytime, for *life*.&lt;/p&gt;
&lt;p&gt;If you buy early access titles from either of these publishers, you are
not chained to your email for fear that the ticking time bomb of your
download notice will expire when you're not looking.&lt;/p&gt;
&lt;p&gt;In general, I think Manning really needs to take a long, hard look at
its store front user experience. I'm not saying I'll never buy a title
from them again, but I am saying it's a HECK of a lot less likely that I
will, and I'll always choose pragprog or O'Reilly if I have a choice..&lt;/p&gt;</summary><category term="customer service"></category><category term="early access"></category><category term="ebooks"></category><category term="manning"></category><category term="meap"></category><category term="publishing"></category><category term="technical"></category></entry><entry><title>Managing crontabs with Git</title><link href="/managing-crontabs-with-git.html" rel="alternate"></link><updated>2010-10-20T15:24:00+00:00</updated><author><name>feoh</name></author><id>tag:,2010-10-20:managing-crontabs-with-git.html</id><summary type="html">&lt;p&gt;&lt;span style="color: #0000ff;"&gt;April 2012 Update&lt;/span&gt;: &lt;span
style="color: #ff0000;"&gt;Nowadays we use &lt;a href="http://www.opscode.com/chef/" title="Chef"&gt;&lt;span
style="color: #ff0000;"&gt;Chef&lt;/span&gt;&lt;/a&gt;
from Opscode solutions to manage our crontabs, and just about everything
else in our enterprise infrastructure. It rocks :)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Time and time again over the years I've dealt with the same problem -
who took a random pot shot at some critical user's crontab file and
deleted things without asking?&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;All of a sudden, someone realizes that some function that's supposed to
run every so often has stopped, and in fact hasn't run in weeks. You
sniff around - nope, no errors in the logs, in fact no logs at all!&lt;/p&gt;
&lt;p&gt;Then you look at the crontab for the user in question and realize that
the lines invoking the script that used to be there have either been
deleted or commented out. What the? Who did this, and why?&lt;/p&gt;
&lt;p&gt;Git to the rescue! With the help of a simple Bourne Shell script, you
can keep your crontab managed so you'll not just be able to see who
changed what and when, but if you have the Git hook installed to send
mail on commits, you can be notified of those changes in real time.
Pretty cool eh? :)&lt;/p&gt;
&lt;p&gt;Since crontab has no built in security precautions other than requiring
you to BE the user whose crontab you're submitting, we can't lock people
not using this script out, but if you tell everyone that changes they
make outside of the script may be summarily ignored and overwritten (and
put something to that effect in the comment block at the top of your
crontab) you should be in good shape. The script will compare what's in
Git with what's currently installed in cron, and if there are
discrepancies it will give you a chance to cleanly exit and resolve
them, or allow you to ignore them and roll forward with editing and
submitting what's in Git.&lt;/p&gt;
&lt;p&gt;Here's the script. It assumes you're running as your regular user and
have sudo privs to the user whose crontab you wish to edit. It also
assumes you've created a Git repository called system_cron.git&lt;/p&gt;
&lt;p&gt;To set it up, just edit reponame and gitrepo to appropriate values for
your site and copy the script to somewhere folks can access it in their
PATH.&lt;/p&gt;
&lt;p&gt;To use it, just invoke it with the user whose crontab you want to edit -
for example:&lt;code&gt;edit_crontab.sh build&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;``` {lang="bash"}&lt;/p&gt;
&lt;h1&gt;!/bin/sh&lt;/h1&gt;
&lt;p&gt;export tmpdir="/tmp/crontab_$$"&lt;/p&gt;
&lt;p&gt;if [ $# -lt 1 ]; then
    echo "Usage: $0 "
    exit 1;
fi&lt;/p&gt;
&lt;p&gt;if [ -z "$EDITOR" ]; then
    echo "No editor found.  Using vim."
    export EDITOR="/usr/bin/vim"
fi&lt;/p&gt;
&lt;p&gt;crontab_user=$1&lt;/p&gt;
&lt;p&gt;crontab_file="&lt;code&gt;uname -n&lt;/code&gt;-$crontab_user.crontab"
echo "crontab_file=$crontab_file"&lt;/p&gt;
&lt;p&gt;git clone /home/git/system_cron.git $tmpdir
cd $tmpdir&lt;/p&gt;
&lt;p&gt;sudo -u $crontab_user crontab -l &amp;gt; currcrontab_$$&lt;/p&gt;
&lt;p&gt;if [ $? -ne 0 ]; then
    echo "sudo to user $crontab_user failed! Do you have sudo privs?"
    exit 1;
fi&lt;/p&gt;
&lt;p&gt;diff=&lt;code&gt;diff currcrontab_$$ $crontab_file&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;if [ $? -ne 0 ]; then
    echo "Currently running crontab for $crontab_user differs from Git!"
    echo "Here are the differences:"
    echo $diff
    echo 
    echo -n "Continue editing / submitting what's in Git? (Y/n): "
    read yesorno
    if [ "$yesorno" != "Y" ]; then
        echo "Very good.  Exiting." 
        exit 1;      &lt;br /&gt;
    fi
fi&lt;/p&gt;
&lt;p&gt;$EDITOR $crontab_file&lt;/p&gt;
&lt;p&gt;echo "Here are your changes:"
git diff --exit-code $crontab_file
if [ $? -eq 0 ]; then
    echo "No changes made.  Not submitting anything."
    exit 1;
fi&lt;/p&gt;
&lt;p&gt;echo -n "Submit these changes to Git and crontab? (Y/n): "
read yesorno
if [ "$yesorno" != "Y" ]; then
    echo "Your changes are in $tmpdir/system_cron/$crontab_file."
    echo "Please clean up this directory when you're done with it."
    exit 1;      &lt;br /&gt;
else
    git commit $crontab_file
    if [ $? -ne 0 ]; then
        echo "There was a problem committing your crontab to git!"
        exit 1;
    fi
    git push origin master
    if [ $? -ne 0 ]; then
        echo "There was a problem pushing your crontab to git!"
        exit 1;
    fi&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="x"&gt; if we made it this far. We&amp;#39;re all good.  Install that puppy!&lt;/span&gt;

&lt;span class="x"&gt;echo &amp;quot;Installing your crontab.&amp;quot;&lt;/span&gt;
&lt;span class="x"&gt;sudo -u &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;crontab_user&lt;/span&gt;&lt;span class="x"&gt; crontab &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;crontab_file&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;if [ &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="x"&gt;? -ne 0 ]; then&lt;/span&gt;
&lt;span class="x"&gt;    echo &amp;quot;ERROR! Your changes were NOT installed! Something went wrong.&amp;quot;&lt;/span&gt;
&lt;span class="x"&gt;    exit 1;&lt;/span&gt;
&lt;span class="x"&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;fi&lt;/p&gt;
&lt;p&gt;echo "Cleaning up tmp directory..."&lt;/p&gt;
&lt;h1&gt;rm -rf $tmpdir&lt;/h1&gt;
&lt;p&gt;```&lt;/p&gt;</summary><category term="administration"></category><category term="bourne shell"></category><category term="cron"></category><category term="crontab"></category><category term="Git"></category><category term="management"></category><category term="SCM"></category><category term="script"></category><category term="shell"></category><category term="sysadmin"></category><category term="UNIX"></category></entry><entry><title>Will Java survive Oracle?</title><link href="/untitled.html" rel="alternate"></link><updated>2010-10-06T18:00:00+00:00</updated><author><name>feoh</name></author><id>tag:,2010-10-06:untitled.html</id><summary type="html">&lt;p&gt;When Oracle bought Sun, I was initially fairly bullish on the idea - I
thought Oracle might temper some of Sun's whimsical brainstorming turned
projects that it poured resources into, and create a leaner, meaner Sun.&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;Well, if initial indications continue to hold, they may be going too
far, and throwing the baby out with the bath water.&lt;/p&gt;
&lt;p&gt;I've heard from several people who returned from JavaOne about what a
disappointing experience it was, and how they felt marginalized and
overrun by the suit wearing denizens that have populated Oracle Develop
for years.&lt;/p&gt;
&lt;p&gt;I wasn't surprised when I heard that Oracle was folding JavaOne into its
main conference offering, but I *WAS* surprised that they didn't take
great pains to ensure that the experience for Java developers was no
less useful, fun and all around worth it to developers as it has been in
the past.&lt;/p&gt;
&lt;p&gt;I would think they'd be working overtime to convince developers that
Java is still a first class, thriving platform worth investing in, not
an also ran to Oracle's existing product suite.&lt;/p&gt;
&lt;p&gt;To be fair, I'm observing from a slight distance these days as I work
for &lt;a href="http://www.bluestatedigital.com/"&gt;Blue State Digital&lt;/a&gt;, an
incredible company doing amazing things with PHP (which has come a long,
LONG way while I wasn't looking - I'll be posting about that soon), but
I still feel like I have a lot invested in Java - I spent a decade out
of my career living in that space, so I would love to see it continue to
thrive, not just survive.&lt;/p&gt;
&lt;p&gt;Clearly, Java isn't going away any time soon. In my opinion it's a great
platform (not free of warts, sure, but name one that is) but this does
make me wonder about people choosing a platform for new projects - there
are lots of choices out there today, many of which are lighter weight
and much less fragmented than what Java has to offer.&lt;/p&gt;
&lt;p&gt;Oracle needs to make up its mind about whether it sees Java as a crown
jewel or a sick aunt to be locked away in a drafty room and checked on
once every few days.&lt;/p&gt;
&lt;p&gt;Or maybe it already has, only time will tell.&lt;/p&gt;</summary><category term="acquisition"></category><category term="community"></category><category term="development"></category><category term="Java"></category><category term="JavaOne"></category><category term="Oracle"></category><category term="Sun"></category><category term="support"></category><category term="technology"></category></entry><entry><title>Windows Scripting - a VBScript Survival Guide</title><link href="/windows-scripting-a-vbscript-survival-guide.html" rel="alternate"></link><updated>2010-03-31T15:18:00+00:00</updated><author><name>cpatti</name></author><id>tag:,2010-03-31:windows-scripting-a-vbscript-survival-guide.html</id><summary type="html">&lt;h2&gt;1. Introduction&lt;/h2&gt;
&lt;p&gt;If you're new to the world of Windows scripting as I am, the array of
acronyms, technologies and access methodologies that you need to
traverse in order to get anything done can range from bewildering on a
good day to utterly derangement inducing on a bad one.&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;I've been doing installer and deployment development at a Windows
enterprise software company for the last year or so, and after decades
spent comfortably swaddled in the familiarity of the UNIX and Java
world, I definitely found myself feeling shell shocked, disoriented, and
frustrated at the lack of any sort of cohesive resources to aid me in my
quest.&lt;/p&gt;
&lt;p&gt;Microsoft has been doing its best to pretend VBScript doesn't exist -
touting &lt;a href="http://blogs.msdn.com/PowerShell/" title="Windows PowerShell"&gt;Windows
PowerShell&lt;/a&gt; as
the way and the light.  PowerShell is indeed an awesome tool, and I for
one would happily consign VBScript to the briny deeps never to be
thought of again were it not for one little problem - the vast majority
of Windows systems running in the wild don't have PowerShell
installed.   Until a new day dawns and PowerShell is on *every single*
Windows box our company wants to install its software on, VBScript
remains the lowest common denominator for system scripting and thus the
only &lt;strong&gt;real&lt;/strong&gt; game in town for install time scripting.&lt;/p&gt;
&lt;p&gt;The goal of this article is not to teach you VBScript, sadly, there are
essentially no books and precious few online resources dedicated to this
topic online.  I will offer pointers to those that I have found most
useful, and some collected wisdom on how to best make use of them, as
well as some pitfalls I encountered which with any luck I can help you
avoid.&lt;/p&gt;
&lt;p&gt;That said, let's get started.&lt;/p&gt;
&lt;h2&gt;2. Learning VBScript&lt;/h2&gt;
&lt;p&gt;This will mostly be a collection of pointers to resources with a smidgen
of commentary on each to get you moving in the right direction.&lt;/p&gt;
&lt;h3&gt;A. Books&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.amazon.com/Windows-XP-Annoyances-Geeks-2nd/dp/0596008767/ref=sr_1_1?ie=UTF8&amp;amp;s=books&amp;amp;qid=1270065442&amp;amp;sr=8-1" title="Windows XP Annoyances"&gt;Windows XP
    Annoyances&lt;/a&gt; -
    This book should really be titled "Windows For Geeks" :) it is the
    single most useful book I have ever encountered for someone trying
    to make the transition from another environment and isn't content to
    just grit their teeth and groan at all the annoying defaults Windows
    ships with.  In addition to an incredible amount of depth around the
    Windows registry and how you can wield it to suit your needs, this
    book also has one of the best simple introductions to system
    scripting with VBScript I've seen.  Two thumbs up. Note that this is
    the 1997 edition, and this book now comes in Windows Vista and
    Windows 7 flavors which I haven't read, but can only assume are
    equally awesome.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.visualbasicscript.com/" title="VBScript Forums"&gt;visualbasicscript.com&lt;/a&gt; -
    This is far and away the single best VBScript resources on the
    intertubes.  The folks in these forums are experts, and will help
    you solve your problem virtually every time.  I can't say enough
    about the incredible community here.  Nine out of ten times, if I go
    looking somewhere else first I end up coming back here and wishing I
    hadn't wasted my time elsewhere first :)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://technet.microsoft.com/en-us/scriptcenter/default.aspx" title="The Scripting Guys"&gt;Microsoft Script Center / The Scripting
    Guys&lt;/a&gt; -
    The second most useful scripting site on the web.  The Scripts
    Repository and "Scripting Guys" MSDN blog are an incredible resource
    for system scripters.  While the emphasis has definitely shifted
    towards PowerShell these days (and rightfully so) most of the
    techniques discussed can be leveraged in VBScript once you get cozy
    with the syntactic differences between the two (very different)
    languages.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/d1et7k7c%28v=VS.85%29.aspx"&gt;MSDN Windows Scripting
    Technologies&lt;/a&gt; -
    This page covers things like the Windows Scripting Host, the core
    technology that actually allows you to perform useful work in
    VBScript.  While somewhat more complete than the VBScript reference
    itself, it's no great shakes.  You'll find yourself learning much
    more from examples published elsewhere, but for the occasional API
    lookup or clarification it can be useful.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://msdn.microsoft.com/en-us/library/t0aew7h6%28VS.85%29.aspx" title="VBScript Reference"&gt;MSDN VBscript
    Reference&lt;/a&gt; -
    You'll note this site's position well down the list.  It's there for
    a reason.  The documentation provided here is very sketchy and
    frankly incredibly misleading in places.  The authors seem to have
    weaseled out of writing a more complete documentation set by making
    a vacuous assertion along the lines of "Well, it's just like regular
    Visual Basic, with a few minor differences".  This leaves people
    like myself who have never had the need to touch a fully fledged VB
    implementation out in the cold, feeling like second class citizens. 
    While these pages can be useful for occasional clarification on some
    obscure language feature, those seeking to understand how the
    language works in the large should definitely look elsewhere.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://support.microsoft.com/kb/308364"&gt;Windows Script Debugging Microsoft KB
    Article&lt;/a&gt; - This article will
    get you started interactively debugging your scripts using Visual
    Studio.  Don't bother with the Windows Script Debugger, Visual
    Studio Express is free and much better :)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.w3schools.com/vbscript/default.asp"&gt;W3Schools VBScript
    Tutorial/Reference&lt;/a&gt; -
    This page is definitely rather Web-centric, focusing on VBScript in
    classic ASP programming, however, the core language and some of the
    techniques are the same.  In many cases this is a better reference
    than the MSDN one, and the tutorial lets you work through the
    examples online in a web browser which is cool.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;3. Debugging&lt;/h2&gt;
&lt;h3&gt;Who turned the lights out?&lt;/h3&gt;
&lt;p&gt;If you find that some script you've inherited is not working, but you
get exactly zero output or errors, look for the telltale
&lt;code&gt;On Error Goto 0&lt;/code&gt; or &lt;code&gt;On Error Resume Next&lt;/code&gt; statements. These basically
disable VBScript's inherent error handling functionality and cause your
script to silently ignore errors. Helpful, eh?&lt;/p&gt;
&lt;h3&gt;Never run while blind folded.&lt;/h3&gt;
&lt;p&gt;Know how you're invoking your VBScript. If you're calling your script
from an installer or some such executable, you're likely using
Microsoft's &lt;code&gt;cscript&lt;/code&gt; tool. which doesn't do a very good job of always
displaying handy things like syntax or run time errors. Try running your
script with &lt;code&gt;wscript&lt;/code&gt; instead for debugging purposes. Heretofore
mysterious behavior may become clear :)&lt;/p&gt;
&lt;h3&gt;That's all!&lt;/h3&gt;
&lt;p&gt;Hopefully this post will prove useful to some poor soul, manacled in
place, suffering through their own personal Windows induced hell. Even
if it isn't, these tidbits have been rattling around in my head since I
escaped (I now work for &lt;a href="http://www.bluestatedigital.com" title="Blue State Digital: Design. Strategy. Technology"&gt;Blue State
Digital&lt;/a&gt;,
we're a LAMPs shop (Linux, Apache, MySQL, PHP) and I hope to never be
trapped in Windows enterprise limbo again!&lt;/p&gt;</summary><category term="deployment"></category><category term="Installers"></category><category term="microsoft"></category><category term="powershell"></category><category term="scripting"></category><category term="systems"></category><category term="vbscript"></category><category term="visual basic"></category><category term="Windows"></category></entry><entry><title>Yay and Boo all in one breath: The Amazon Kindle Development Kit (KDK)</title><link href="/yay-and-boo-all-in-one-breath-the-amazon-kindle-development-kit-kdk.html" rel="alternate"></link><updated>2010-02-07T12:13:00+00:00</updated><author><name>feoh</name></author><id>tag:,2010-02-07:yay-and-boo-all-in-one-breath-the-amazon-kindle-development-kit-kdk.html</id><summary type="html">&lt;p&gt;Amazon has finally come out with the details around their Kindle
Development Kit (KDK) you can read the details
&lt;a href="https://kindlepublishing.amazon.com/gp/vendor/kindlepubs/kdk/get-content?id=200436000"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;This is absolutely great news for the J2ME development community, this
is a mainstream device from a big name manufacturer where they can ply
their existing skill set or port their existing apps.&lt;/p&gt;
&lt;p&gt;However, I'm a bit disappointed. I realize that the Kindle is meant as a
light weight device, but I have always found J2ME's I/O model to be
rather cripplingly baroque in so many ways.&lt;/p&gt;
&lt;p&gt;Looking over Amazon's APIDoc however, it does seem like they've built
their own infrastructure atop J2ME, so perhaps they've made it easier
and more pleasant to code for.&lt;/p&gt;
&lt;p&gt;I'm torn between wanting to get in on the ground floor and not wanting
to invest the time and energy in learning a technology (J2ME) which I
feel has gone way past its expiry date.&lt;/p&gt;
&lt;p&gt;Anyway, we'll see but I'll definitely be keeping a close eye on this
one.&lt;/p&gt;</summary><category term="amazon"></category><category term="development"></category><category term="j2me"></category><category term="Java"></category><category term="kindle"></category><category term="programming"></category></entry><entry><title>3 Things Microsoft Should Do for Release Engineers</title><link href="/3-things-microsoft-should-do-for-release-engineers.html" rel="alternate"></link><updated>2010-01-28T13:39:00+00:00</updated><author><name>cpatti</name></author><id>tag:,2010-01-28:3-things-microsoft-should-do-for-release-engineers.html</id><summary type="html">&lt;p&gt;For the last year or so I've been working at a 100% Windows based
enterprise development shop.   They ship a fairly large and complex
application for health insurance providers, which draws on many of the
core technologies in the Microsoft enterprise stable.&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;This post highlights a few things that make working in this environment
a whole lot more onerous than it needs to be in my opinion, so let's get
started.&lt;/p&gt;
&lt;h2&gt;1. Installers&lt;/h2&gt;
&lt;p&gt;The Windows installation landscape has been a bleak one indeed for a
very long time.  Tools like Installshield with their own proprietary
languages like InstallScript make installer development unnecessarily
painful and baroque.  Is there &lt;strong&gt;really&lt;/strong&gt; any reason I should be
programming in a language with no real data structures to speak of in
2010?  Even flow of control is handled in a way I can only describe as
baroque.  There are methods/functions, but the main body of your
installer's code has to jump around everywhere using goto.  What a mess.&lt;/p&gt;
&lt;p&gt;There is hope on this front, in the form of
&lt;a href="http://wix.sourceforge.net/" title="WiX - Windows Installer XML"&gt;WiX&lt;/a&gt;, the
Windows Installer XML toolkit, which allows developers to iteratively
build and design their installer along with the regular development
process.  Right now however the learning curve seems incredibly steep. 
Perhaps Visual Studio could generate a template WiX project to get
people started?&lt;/p&gt;
&lt;p&gt;I'd also love to see some thought given to simplifying the deployment
model for things like
&lt;a href="http://msdn.microsoft.com/en-us/library/ms685978%28VS.85%29.aspx" title="COM+"&gt;COM+&lt;/a&gt; -
which feels to me like a magic black box with myriad buttons and levers,
all of which are a bear to get right at install time.&lt;/p&gt;
&lt;h2&gt;2. Builds/SCM&lt;/h2&gt;
&lt;p&gt;MSBuild needs to have &lt;strong&gt;dramatically&lt;/strong&gt; better documentation, and to a
lesser extent so does TFS  - they get the broad bits right - everything
you could want to do through the UI is covered, but process automation
using scripting / command line tools gets substantially murkier.&lt;/p&gt;
&lt;p&gt;In the 'credit where credit is due' department, the TFS team has been
incredibly responsive on their forums, and that's what's helped us get
by so far, but there's no substitute for first rate docs.&lt;/p&gt;
&lt;h2&gt;3. Infrastructure Scripting&lt;/h2&gt;
&lt;p&gt;As of right now, there are a thousand different interfaces to accomplish
the same thing, and for complex configuration tasks like configuring IIS
at install time, the possibilities can be dizzying.  I would like to see
Microsoft choose &lt;strong&gt;one&lt;/strong&gt; mechanism for run-time system/software
configuration and document the heck out of it.&lt;/p&gt;
&lt;p&gt;Kudos to the
&lt;a href="http://blogs.msdn.com/powershell/" title="Windows PowerShell"&gt;PowerShell&lt;/a&gt;
team and &lt;a href="http://technet.microsoft.com/en-us/scriptcenter/dd901334.aspx" title="The Scripting Guys"&gt;The Scripting
Guys&lt;/a&gt;
for making great strides in this area.  PowerShell is a really nice
environment for all kinds of scripting, and I look forward to the day
when we can eliminate VBScript from our installers entirely in its
favor, but we're not there yet sadly.  The object pipeline is one of the
more powerful concepts in the modern scripting milieu, and I think Apple
and the UNIX world could take a page from PowerShell's book in this
regard.&lt;/p&gt;
&lt;p&gt;Being a release engineer in a Windows world presents some very
interesting and different challenges for someone coming from a UNIX
background like myself, and with a little bit of emphasis and effort on
Microsoft's part, surmounting them could be a whole lot less painful.&lt;/p&gt;</summary><category term="infrastructure"></category><category term="Installers"></category><category term="installshield"></category><category term="microsoft"></category><category term="msbuild"></category><category term="powershell"></category><category term="release"></category><category term="releng"></category><category term="scripting"></category><category term="tfs"></category><category term="Windows"></category></entry><entry><title>Is it just me...</title><link href="/is-it-just-me.html" rel="alternate"></link><updated>2009-11-13T14:18:00+00:00</updated><author><name>cpatti</name></author><id>tag:,2009-11-13:is-it-just-me.html</id><summary type="html">&lt;p&gt;Or has the number of new programming languages been increasing
exponentially of late?&lt;/p&gt;
&lt;p&gt;I don't just mean the number of new languages being &lt;strong&gt;invented&lt;/strong&gt;,
because that's always been the case, but the number which are actually
garnering a fair bit of tech buzz?&lt;/p&gt;
&lt;p&gt;In the last few months, I've heard a LOT about Clojure, Scala, Factor,
and most recently Google's Go.&lt;/p&gt;
&lt;p&gt;I can't help but wonder if maybe we should stop inventing new
programming languages and paradigms, and maybe focus on using the ones
we have already more effectively and creatively.&lt;/p&gt;
&lt;p&gt;Then again, maybe I'm just getting old :)&lt;/p&gt;</summary><category term="clojure"></category><category term="computers"></category><category term="development"></category><category term="factor"></category><category term="go"></category><category term="invention"></category><category term="languages"></category><category term="programming"></category><category term="scala"></category><category term="technology"></category></entry><entry><title>Something for nothing when you don't *WANT IT* is still damn annoying.</title><link href="/something-for-nothing-when-you-dont-want-it-is-still-damn-annoying.html" rel="alternate"></link><updated>2008-10-02T11:02:00+00:00</updated><author><name>feoh</name></author><id>tag:,2008-10-02:something-for-nothing-when-you-dont-want-it-is-still-damn-annoying.html</id><summary type="html">&lt;p&gt;Dear Sun;&lt;/p&gt;
&lt;p&gt;When you tell me I hava Java (TM) updates available on my work Windows
machine, I gleefully say sure why not and click through the installer,
because generally Sun provided updates to my installed JDK don't do
anything evil, and with security and all it's a good idea to stay up to
date.&lt;/p&gt;
&lt;p&gt;HOWEVER - trying to shoehorn OpenOffice into the mix is downright
annoying, and I resent it.&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;I don't have anything at all against OpenOffice. In fact, it's a Class
A piece of open source software and is damn impressive for what it is,
what it does, and how much it costs (\$0).&lt;/p&gt;
&lt;p&gt;However, I and many other users have exactly zero use for OpenOffice
because we have the arguably more powerful Microsoft Office suite
already installed on our machines.&lt;/p&gt;
&lt;p&gt;I take no issue with having a little checkbox that says "Hey, want to
get OpenOffice along with Java?" because at least I can check that off
if I want, or not. But having your Java update installer constantly
display ads for OpenOffice, and having it give me &lt;strong&gt;no choice&lt;/strong&gt; in the
matter as to whether or not I want the ferschlugging OpenOffice
installer is just wrong.&lt;/p&gt;
&lt;p&gt;The software sells itself, Sun, there's no reason to try to sneak it
under the radar of unsuspecting users just because you want to be able
to claim more seats. Last time you tried this with Netbeans, and look at
how well that turned out!&lt;/p&gt;
&lt;p&gt;So, get a clue people, really. Truth in advertising, let me do what I
mean and don't try to install software that I need whether I realize it
or not, it just pisses me off.&lt;/p&gt;
&lt;p&gt;Grumph, enough ranting for now :)&lt;/p&gt;</summary><category term="annoyances"></category><category term="free"></category><category term="Installers"></category><category term="Java"></category><category term="OpenOffice"></category><category term="software"></category><category term="Sun"></category><category term="Windows"></category></entry><entry><title>Apparently hell froze over - Apple made Safari into a usable web browser!</title><link href="/apparently-hell-froze-over-apple-made-safari-into-a-usable-web-browser.html" rel="alternate"></link><updated>2008-03-18T11:37:00+00:00</updated><author><name>feoh</name></author><id>tag:,2008-03-18:apparently-hell-froze-over-apple-made-safari-into-a-usable-web-browser.html</id><summary type="html">&lt;p&gt;For a long time I have *wanted* to be a Safari user...&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;But every time I would try I would end up using it for 5 minutes and
then find myself butting heads with a site that's entirely unreadable
using it.&lt;/p&gt;
&lt;p&gt;My hard core Mac zealot friends would wave their arms and say "BUT THOSE
SITES AREN'T STANDARDS CONFORMANT!" which is probably true, but there
are times I simply want to be an end user, and web browsing is one of
them.&lt;/p&gt;
&lt;p&gt;Happily, with version 1.3 Apple seems to have improved the HTML, CSS and
Javascript rendering support enough that all of the sites that I tested
which used to fail utterly or render useless results under older
versions now work like a charm.&lt;/p&gt;
&lt;p&gt;Kudos to Apple for having had the sense to bring their default web
browser for OSX up to the excellent user experience standards exhibited
by the rest of its environment.&lt;/p&gt;</summary><category term="apple"></category><category term="browser"></category><category term="css"></category><category term="DOM"></category><category term="html"></category><category term="javascript"></category><category term="Macintosh"></category><category term="safari"></category><category term="standards"></category><category term="web"></category></entry><entry><title>One Blog, One Heart (Let's get together and feel alright!)</title><link href="/one-blog-one-heart-lets-get-together-and-feel-alright.html" rel="alternate"></link><updated>2007-12-19T08:29:00+00:00</updated><author><name>feoh</name></author><id>tag:,2007-12-19:one-blog-one-heart-lets-get-together-and-feel-alright.html</id><summary type="html">&lt;p&gt;OK so I couldn't resist the Ziggy Marley reference :)&lt;/p&gt;
&lt;p&gt;As I mentioned in a previous post on the old blog, I'm switching to
&lt;a href="http://www.wordpress.org"&gt;Wordpress&lt;/a&gt;, because, honestly,
&lt;a href="http://www.typosphere.org"&gt;Typo&lt;/a&gt; is a royal pain for anyone who isn't
already a top notch Ruby on Rails coder.&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;So, please don't expect any more posts on the old link /
feed - You can get the new RSS feeds and all the other groovy info from
this (the new blog) hosted &lt;a href="http://www.feoh.org"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also of note to my much appreciate LiveJournal readership - the original
idea was that I would keep an external geek blog and only cross post to
LJ when I had something not even remotely geeky to say. The truth is
that these days, I end up doing a lot of work that I find personally
exciting and fulfilling, but that the world at large wouldn't. So, I've
enabled the LiveJournal cross poster that Wordpress supplies and hence
can stop thinking about where to post what. I hope my LJ friends will
tolerate skipping the occasionally geeky post when I *do* have
something of note to say :)&lt;/p&gt;
&lt;p&gt;I'll keep the old blog up in case someone wishes to Google some nugget
of wisdom from it (Yes, I know using Google as a verb is suspect, but
really, it could be much, much worse.) and ask my few but faithful
readers to please update their feeds.&lt;/p&gt;
&lt;p&gt;Thanks and happy holidays!&lt;/p&gt;
&lt;p&gt;-Chris&lt;/p&gt;</summary><category term="blog"></category><category term="change"></category><category term="feeds"></category><category term="livejournal"></category><category term="typo"></category><category term="wordpress"></category></entry><entry><title>Ah, Sweet Sanity!</title><link href="/ah-sweet-sanity.html" rel="alternate"></link><updated>2007-12-18T11:04:00+00:00</updated><author><name>feoh</name></author><id>tag:,2007-12-18:ah-sweet-sanity.html</id><summary type="html">&lt;p&gt;Woo. So, as I indicated in my old blog, I have switched to Wordpress.
Typo is nifty and all, but it's still hackerware and seems unlikely to
veer from that course any time soon.&lt;/p&gt;
&lt;p&gt;Much as I love Ruby, I am still clueless about Rails and truthfully,
even web development in general (I have now learned the basics of CSS -
but apparently not enough to be dangerous yet, and I *still* don't
know Javascript.)&lt;/p&gt;
&lt;p&gt;WordPress does everything I need with a modicum of hassle, so that's the
direction I'm moving in now.&lt;/p&gt;
&lt;p&gt;This does mean you'll need to update your RSS links. The new link is
here: http://www.feoh.org/?feed=rss2&lt;/p&gt;
&lt;p&gt;However being Wordpress, it also supports Atom, and a bunch of others.&lt;/p&gt;
&lt;p&gt;Anyway, look for more and more interesting bits in this space now that I
can stop wrestling with the infrastructure and actually say something
for a change!&lt;/p&gt;
&lt;p&gt;Merry Christmas, Happy (belated!) Channukah, and a happy new year!&lt;/p&gt;</summary><category term="blog"></category><category term="conversion"></category><category term="pain"></category><category term="sanity"></category><category term="typo"></category><category term="wordpress"></category></entry></feed>